# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'dev.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        MainWindow.setStyleSheet("background-color: rgb(36, 31, 49);\n"
"background-color: rgb(14, 14, 14);\n"
"color: rgb(198, 70, 0);\n"
"font: 11pt \"Ubuntu\";")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.search = QtWidgets.QLineEdit(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.search.sizePolicy().hasHeightForWidth())
        self.search.setSizePolicy(sizePolicy)
        self.search.setStyleSheet("\n"
"font: 18pt \"Ubuntu Mono\";\n"
"color: rgb(222, 221, 218);\n"
"background-color: rgb(14, 14, 2);\n"
"selection-background-color: rgb(206, 92, 0);\n"
"selection-color: rgb(0, 0, 0);\n"
"border: 1px solid rgb(165, 29, 45)\n"
"")
        self.search.setAlignment(QtCore.Qt.AlignCenter)
        self.search.setObjectName("search")
        self.horizontalLayout.addWidget(self.search)
        self.bookmarks_count = QtWidgets.QLCDNumber(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.bookmarks_count.sizePolicy().hasHeightForWidth())
        self.bookmarks_count.setSizePolicy(sizePolicy)
        self.bookmarks_count.setMinimumSize(QtCore.QSize(129, 77))
        self.bookmarks_count.setStyleSheet("border: 1px solid rgb(165, 29, 45)")
        self.bookmarks_count.setDigitCount(3)
        self.bookmarks_count.setSegmentStyle(QtWidgets.QLCDNumber.Flat)
        self.bookmarks_count.setObjectName("bookmarks_count")
        self.horizontalLayout.addWidget(self.bookmarks_count)
        self.verticalLayout.addLayout(self.horizontalLayout)
        spacerItem = QtWidgets.QSpacerItem(17, 9, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.verticalLayout.addItem(spacerItem)
        self.listWidget = QtWidgets.QListWidget(self.centralwidget)
        self.listWidget.setObjectName("listWidget")
        self.listWidget.setViewMode(QtWidgets.QListView.IconMode)
        self.listWidget.setSpacing(20)
        self.listWidget.setStyleSheet("\n"
"font: 18pt \"Ubuntu Mono\";\n"
"color: rgb(200, 200, 200);\n"
"background-color: rgb(32,34,45);\n"
"selection-background-color: rgb(206, 92, 0);\n"
"selection-color: rgb(0, 0, 0);\n"
"border: 1px solid rgb(165, 29, 45)\n"
"")

        self.verticalLayout.addWidget(self.listWidget)
        MainWindow.setCentralWidget(self.centralwidget)
        self.listWidget.setUniformItemSizes(True)
        self.listWidget.setResizeMode(QtWidgets.QListView.Adjust)
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        import sys
        import os

        path = os.path.dirname(os.path.abspath(sys.argv[0]))
        iconx = QtGui.QIcon()
        iconx.addPixmap(QtGui.QPixmap(f"{path}/bookmark.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        file = open(f"{path}/bookmarks_10_04_2023.html", 'r')
        data = file.readlines()
        lixt = []
        for i in data:
            x = i.split(" ")
            for j in x:
                if "HREF=" in j:
                    lixt.append(j.replace("HREF=", "").replace('"',""))
        url_name_map={}
        for i in lixt:
            if 'https://' in i:
                x=i.replace('https://',"").split("/")[0]

            elif 'http://' in i:
                x=i.replace('http://',"").split("/")[0]
            url_name_map[x]=i
        count=0
        for i in url_name_map.keys():
            count += 1
            self.label = QtWidgets.QListWidgetItem()
            self.label.setIcon(iconx)
            self.label.setText(i)
            self.listWidget.addItem(self.label)
        self.bookmarks_count.display(count)
        self.retranslateUi(MainWindow)
        self.listWidget.doubleClicked.connect(lambda : self.open_link(url_name_map))
        self.search.textChanged.connect(lambda : self.searchx(url_name_map,iconx))

    def open_link(self,url_map):
        import webbrowser
        webbrowser.open_new_tab(url_map[self.listWidget.currentItem().text()])
    def searchx(self,url_map,iconx):
        search=self.search.text()
        if search:
            count=0
            self.listWidget.clear()
            for i in url_map.keys():
                if search in i:
                    self.label = QtWidgets.QListWidgetItem()
                    self.label.setIcon(iconx)
                    self.label.setText(i)
                    self.listWidget.addItem(self.label)
                    count+=1
            self.bookmarks_count.display(count)
        else:
            count = 0
            self.listWidget.clear()
            for i in url_map.keys():
                self.label = QtWidgets.QListWidgetItem()
                self.label.setIcon(iconx)
                self.label.setText(i)
                self.listWidget.addItem(self.label)
                count+=1
            self.bookmarks_count.display(count)
    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.search.setPlaceholderText(_translate("MainWindow", "Search Bookmark"))
def main():
 import sys
 app = QtWidgets.QApplication(sys.argv)
 w = QtWidgets.QMainWindow()
 ui = Ui_MainWindow()
 ui.setupUi(w)
 w.show()
 sys.exit(app.exec_())
main()